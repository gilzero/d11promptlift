"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = require("chalk");
const ramda_1 = __importDefault(require("ramda"));
const consola_1 = __importDefault(require("consola"));
const logMethodColorMap = {
    info: chalk_1.cyan,
    error: chalk_1.red.bold,
    warn: chalk_1.yellow.bold,
    debug: chalk_1.dim,
    verbose: chalk_1.dim,
    success: chalk_1.green,
};
const withColor = (logger) => (method, message) => logger(logMethodColorMap[method](message));
const logMethodEq = (potentialMethod) => (method, _) => potentialMethod === method;
function log(method, message, exitCode) {
    ramda_1.default.cond([
        [logMethodEq('error'), withColor(consola_1.default.error)],
        [logMethodEq('info'), withColor(consola_1.default.info)],
        [logMethodEq('warn'), withColor(consola_1.default.warn)],
        [ramda_1.default.T, withColor(consola_1.default.log)],
    ])(method, message);
    if (exitCode) {
        process.exit(exitCode);
    }
    return;
}
exports.default = log;
