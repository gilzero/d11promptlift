"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const crypto_1 = require("crypto");
const constants_1 = require("../../lib/constants");
const findFileInCurrentPath_1 = __importDefault(require("../fs/findFileInCurrentPath"));
function getCachedItemPath(bucket, itemPath, checkout) {
    const projectPath = (0, findFileInCurrentPath_1.default)(constants_1.EMULSIFY_PROJECT_CONFIG_FILE);
    if (!projectPath) {
        throw new Error(`Unable to find ${constants_1.EMULSIFY_PROJECT_CONFIG_FILE}`);
    }
    return (0, path_1.join)(constants_1.CACHE_DIR, bucket, (0, crypto_1.createHash)('md5')
        .update(`MBR${String(projectPath)}${String(checkout)}`)
        .digest('hex'), ...itemPath);
}
exports.default = getCachedItemPath;
