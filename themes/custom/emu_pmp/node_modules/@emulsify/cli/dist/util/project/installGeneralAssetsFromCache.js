"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const constants_1 = require("../../lib/constants");
const findFileInCurrentPath_1 = __importDefault(require("../fs/findFileInCurrentPath"));
const copyItemFromCache_1 = __importDefault(require("../cache/copyItemFromCache"));
const catchLater_1 = __importDefault(require("../catchLater"));
async function installGeneralAssetsFromCache(system, variant) {
    const path = (0, findFileInCurrentPath_1.default)(constants_1.EMULSIFY_PROJECT_CONFIG_FILE);
    if (!path) {
        throw new Error('Unable to find an Emulsify project to install assets into.');
    }
    const assets = [...(variant.directories || []), ...(variant.files || [])];
    const promises = [];
    for (const asset of assets) {
        const destination = (0, path_1.join)((0, path_1.dirname)(path), asset.destinationPath);
        promises.push((0, catchLater_1.default)((0, copyItemFromCache_1.default)('systems', [system.name, asset.path], destination, true)));
    }
    await Promise.all(promises);
}
exports.default = installGeneralAssetsFromCache;
