"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ramda_1 = __importDefault(require("ramda"));
const constants_1 = require("../../lib/constants");
const findFileInCurrentPath_1 = __importDefault(require("../fs/findFileInCurrentPath"));
const writeToJsonFile_1 = __importDefault(require("../fs/writeToJsonFile"));
const getEmulsifyConfig_1 = __importDefault(require("./getEmulsifyConfig"));
async function setEmulsifyConfig(config) {
    const path = (0, findFileInCurrentPath_1.default)(constants_1.EMULSIFY_PROJECT_CONFIG_FILE);
    const existingConfig = await (0, getEmulsifyConfig_1.default)();
    if (!path || !existingConfig) {
        throw new Error(`Unable to set values for ${constants_1.EMULSIFY_PROJECT_CONFIG_FILE} because you are not in an Emulsify project`);
    }
    await (0, writeToJsonFile_1.default)(path, ramda_1.default.mergeDeepRight(existingConfig, config));
}
exports.default = setEmulsifyConfig;
